package com.mycompany.prototipogym;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author asist-depti
 */
public class CClientesBP extends javax.swing.JFrame {

    private static final String FILE_PATH = "archivos/cliente.txt";
    private List<String[]> listaUsuarios = new ArrayList<>();

    public CClientesBP() {
        initComponents();
        setTitle("Pantera Fitness");
        setLocationRelativeTo(null);
        cargarUsuarios();
    }

private void cargarUsuarios() {
    DefaultTableModel modelo = (DefaultTableModel) CUTable.getModel();
    modelo.setRowCount(0); // Limpiar tabla
    listaUsuarios.clear(); // Limpiar lista

    try (BufferedReader br = new BufferedReader(new FileReader(FILE_PATH))) {
        String linea;
        while ((linea = br.readLine()) != null) {
            String[] datos = linea.split(",", -1);
            if (datos.length >= 14) {
                // Verificamos si el balance es mayor a 0
                double balance = 0.0;
                try {
                    balance = Double.parseDouble(datos[12].trim());
                } catch (NumberFormatException e) {
                    // Si no es un número, se ignora este registro
                    continue;
                }

                if (balance > 0) {
                    String[] fila = new String[] {
                        datos[0].trim(), // ID
                        datos[1].trim(), // nombre
                        datos[2].trim(), // apellido p
                        datos[3].trim(), // apellido m
                        datos[4].trim(), // Dirección
                        datos[5].trim(), // fecha nac
                        datos[6].trim(), // teléfono
                        datos[7].trim(), // celular
                        datos[8].trim(), // fecha ingreso
                        datos[9].trim(), // status
                        datos[10].trim().equals("1") ? "Socio" : "Invitado", // tipo
                        datos[11].trim(), // correo
                        datos[12].trim(), // balance
                        datos[13].trim()  // cuota
                    };
                    modelo.addRow(fila);
                    listaUsuarios.add(fila);
                }
            }
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error al leer el archivo de clientes: " + e.getMessage());
    }
}



    private void filtrarTabla(String texto) {
        int columna = cmbfiltro.getSelectedIndex();

        DefaultTableModel modelo = (DefaultTableModel) CUTable.getModel();
        modelo.setRowCount(0); // Limpiar tabla

        for (String[] fila : listaUsuarios) {
            if (fila[columna].toLowerCase().contains(texto.toLowerCase())) {
                modelo.addRow(fila);
            }
        }
    }
    private void cancelar() {
        this.dispose();  
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        CUTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbfiltro = new javax.swing.JComboBox<>();
        txtconsulta = new javax.swing.JTextField();
        btncancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CUTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Apellido Paterno", "Apellido Materno", "Dirección", "Fecha de Nacimiento", "Teléfono", "Celular", "Fecha Ingreso", "Status", "Tipo", "Correo", "Balance", "Cuota"
            }
        ));
        jScrollPane1.setViewportView(CUTable);

        jLabel1.setText("Consulta de Clientes con Balance Pendiente");

        jLabel2.setText("Filtrar por:");

        cmbfiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Nombre", "Apellido P", "Apellido M", "Dirección", "Fecha de Nacimiento", "Teléfono", "Celular", "Fecha Ingreso", "Ststus", "Tipo", "Correo", "Balance", "Cuota" }));
        cmbfiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbfiltroActionPerformed(evt);
            }
        });

        txtconsulta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtconsultaKeyReleased(evt);
            }
        });

        btncancelar.setText("Cancelar");
        btncancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 869, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtconsulta)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cmbfiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(410, 410, 410)
                        .addComponent(btncancelar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(335, 335, 335)
                        .addComponent(jLabel1)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbfiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtconsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btncancelar)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbfiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbfiltroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbfiltroActionPerformed

    private void txtconsultaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtconsultaKeyReleased
        filtrarTabla(txtconsulta.getText());
    }//GEN-LAST:event_txtconsultaKeyReleased

    private void btncancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_btncancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CClientesBP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CClientesBP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CClientesBP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CClientesBP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CClientesBP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CUTable;
    private javax.swing.JButton btncancelar;
    private javax.swing.JComboBox<String> cmbfiltro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtconsulta;
    // End of variables declaration//GEN-END:variables
}
